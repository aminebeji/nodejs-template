version: "3" 
services:
  #MONGODB container
  mongodb:
    image: mongo
    command: mongod  --dbpath /data/db --port 27017
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./db:/data/db
    networks:
      - mongodb_network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test  --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  #MONGO EXPRESS
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    volumes:
      - /mongodb-data
    depends_on:
      - mongodb
    networks:
      - mongodb_network
    ports:
      - 8081:8081
    healthcheck:
      test: wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  #SERVER
  app:
    container_name: ${APP_NAME}
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGODB_CONNSTRING=${MONGODB_CONNSTRING}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    ports:
      - ${PORT}:${PORT}
    networks:
      - mongodb_network
    restart: always
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    links:
      - mongodb
# Networks to be created to facilitate communication between containers
# volumes:
  # mongodb-data:
  #   name: mongodb-data
networks:
  mongodb_network:
    name: mongodb_network
